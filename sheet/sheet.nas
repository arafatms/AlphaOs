[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_memman_alloc_4K
	EXTERN	_memman_alloc
	EXTERN	_init_screen
	EXTERN	_init_mouse_cursor8
	EXTERN	_make_window8
	EXTERN	_strcpy
	EXTERN	_make_Console8
	EXTERN	_make_textbox8
	EXTERN	_memman_free_4K
[FILE "sheet.c"]
[SECTION .data]
LC0:
	DB	"arafat",0x00
	RESB	33
[SECTION .text]
	GLOBAL	_sheet
_sheet:
	PUSH	EBP
	MOV	ECX,7
	MOV	EBP,ESP
	XOR	EAX,EAX
	PUSH	EDI
	PUSH	ESI
	LEA	EDI,DWORD [-60+EBP]
	CLD
	PUSH	EBX
	MOV	ESI,LC0
	SUB	ESP,48
	REP
	MOVSB
	LEA	EDI,DWORD [-53+EBP]
	MOV	ECX,33
	REP
	STOSB
	PUSH	DWORD [24+EBP]
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [12+EBP]
	MOV	EBX,DWORD [8+EBP]
	MOV	ESI,DWORD [8+EBP]
	ADD	EBX,4
	CALL	_shtctl_init
	MOV	EDX,DWORD [8+EBP]
	ADD	ESI,32
	MOV	EDI,2
	MOV	DWORD [EDX],EAX
	PUSH	EAX
	CALL	_sheet_alloc
	MOV	DWORD [20+EBX],EAX
	MOV	EAX,DWORD [8+EBP]
	PUSH	DWORD [EAX]
	CALL	_sheet_alloc
	MOV	DWORD [20+ESI],EAX
	MOV	EAX,DWORD [20+EBP]
	IMUL	EAX,DWORD [24+EBP]
	PUSH	EAX
	PUSH	DWORD [12+EBP]
	CALL	_memman_alloc_4K
	ADD	ESP,32
	MOV	DWORD [24+EBX],EAX
	PUSH	256
	PUSH	DWORD [12+EBP]
	CALL	_memman_alloc
	MOV	DWORD [24+ESI],EAX
	PUSH	-1
	PUSH	DWORD [24+EBP]
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [24+EBX]
	PUSH	DWORD [20+EBX]
	CALL	_sheet_setbuf
	PUSH	15
	PUSH	16
	PUSH	16
	PUSH	DWORD [24+ESI]
	PUSH	DWORD [20+ESI]
	CALL	_sheet_setbuf
	ADD	ESP,48
	PUSH	DWORD [24+EBP]
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [24+EBX]
	CALL	_init_screen
	PUSH	15
	PUSH	DWORD [24+ESI]
	CALL	_init_mouse_cursor8
	MOV	EDX,DWORD [8+EBP]
	PUSH	0
	PUSH	0
	PUSH	DWORD [20+EBX]
	PUSH	DWORD [EDX]
	CALL	_sheet_slide
	ADD	ESP,36
	MOV	EDX,DWORD [20+EBP]
	SUB	EDX,16
	MOV	EAX,EDX
	CDQ
	IDIV	EDI
	MOV	EDX,DWORD [24+EBP]
	MOV	ECX,EAX
	SUB	EDX,44
	MOV	EAX,EDX
	CDQ
	IDIV	EDI
	PUSH	EAX
	MOV	EDX,DWORD [8+EBP]
	PUSH	ECX
	PUSH	DWORD [20+ESI]
	PUSH	DWORD [EDX]
	CALL	_sheet_slide
	MOV	EAX,DWORD [8+EBP]
	PUSH	0
	PUSH	DWORD [20+EBX]
	PUSH	DWORD [EAX]
	CALL	_sheet_updown
	MOV	EDX,DWORD [8+EBP]
	MOV	DWORD [3588+EDX],1
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	GLOBAL	_updown_mouse
_updown_mouse:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EAX,DWORD [8+EBP]
	PUSH	DWORD [3588+EAX]
	PUSH	DWORD [52+EAX]
	PUSH	DWORD [EAX]
	CALL	_sheet_updown
	LEAVE
	RET
	GLOBAL	_Make_Window
_Make_Window:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,32
	MOV	EBX,DWORD [8+EBP]
	MOV	EDI,DWORD [16+EBP]
	MOV	EAX,DWORD [3588+EBX]
	INC	EAX
	MOV	DWORD [3588+EBX],EAX
	IMUL	EAX,EAX,28
	LEA	ESI,DWORD [4+EAX+EBX*1]
	MOV	EAX,DWORD [20+EDI]
	IMUL	EAX,DWORD [24+EDI]
	PUSH	EAX
	PUSH	DWORD [12+EBP]
	CALL	_memman_alloc_4K
	MOV	DWORD [24+ESI],EAX
	PUSH	DWORD [EBX]
	CALL	_sheet_alloc
	MOV	DWORD [20+ESI],EAX
	PUSH	15
	PUSH	DWORD [24+EDI]
	PUSH	DWORD [20+EDI]
	PUSH	DWORD [24+ESI]
	PUSH	EAX
	CALL	_sheet_setbuf
	ADD	ESP,32
	PUSH	EDI
	PUSH	DWORD [24+EDI]
	PUSH	DWORD [20+EDI]
	PUSH	DWORD [24+ESI]
	CALL	_make_window8
	MOV	EAX,DWORD [EBX]
	MOV	EDX,DWORD [20+ESI]
	MOV	DWORD [4+EDX],EAX
	PUSH	DWORD [24+EBP]
	PUSH	DWORD [20+EBP]
	PUSH	EDX
	PUSH	DWORD [EBX]
	CALL	_sheet_slide
	MOV	EAX,DWORD [3588+EBX]
	ADD	ESP,32
	DEC	EAX
	PUSH	EAX
	PUSH	DWORD [20+ESI]
	PUSH	DWORD [EBX]
	CALL	_sheet_updown
	PUSH	EDI
	PUSH	ESI
	CALL	_strcpy
	MOV	EAX,DWORD [20+ESI]
	MOV	DWORD [28+EDI],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	GLOBAL	_Make_Window_Base
_Make_Window_Base:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,32
	MOV	EDI,DWORD [8+EBP]
	MOV	EBX,DWORD [16+EBP]
	MOV	EAX,DWORD [3588+EDI]
	INC	EAX
	MOV	DWORD [3588+EDI],EAX
	IMUL	EAX,EAX,28
	LEA	ESI,DWORD [4+EAX+EDI*1]
	MOV	EAX,DWORD [20+EBX]
	IMUL	EAX,DWORD [24+EBX]
	PUSH	EAX
	PUSH	DWORD [12+EBP]
	CALL	_memman_alloc_4K
	MOV	DWORD [24+ESI],EAX
	PUSH	DWORD [EDI]
	CALL	_sheet_alloc
	MOV	DWORD [20+ESI],EAX
	PUSH	15
	PUSH	DWORD [24+EBX]
	PUSH	DWORD [20+EBX]
	PUSH	DWORD [24+ESI]
	PUSH	EAX
	CALL	_sheet_setbuf
	ADD	ESP,32
	PUSH	EBX
	PUSH	DWORD [24+EBX]
	PUSH	DWORD [20+EBX]
	PUSH	DWORD [24+ESI]
	CALL	_make_window8
	PUSH	EBX
	PUSH	ESI
	CALL	_strcpy
	MOV	EAX,DWORD [EDI]
	MOV	EDX,DWORD [20+ESI]
	MOV	DWORD [28+EBX],EDX
	MOV	DWORD [4+EDX],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	GLOBAL	_Make_Console_Base
_Make_Console_Base:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,32
	MOV	EDI,DWORD [8+EBP]
	MOV	EBX,DWORD [16+EBP]
	MOV	EAX,DWORD [3588+EDI]
	INC	EAX
	MOV	DWORD [3588+EDI],EAX
	IMUL	EAX,EAX,28
	LEA	ESI,DWORD [4+EAX+EDI*1]
	MOV	EAX,DWORD [20+EBX]
	IMUL	EAX,DWORD [24+EBX]
	PUSH	EAX
	PUSH	DWORD [12+EBP]
	CALL	_memman_alloc_4K
	MOV	DWORD [24+ESI],EAX
	PUSH	DWORD [EDI]
	CALL	_sheet_alloc
	MOV	DWORD [20+ESI],EAX
	PUSH	15
	PUSH	DWORD [24+EBX]
	PUSH	DWORD [20+EBX]
	PUSH	DWORD [24+ESI]
	PUSH	EAX
	CALL	_sheet_setbuf
	ADD	ESP,32
	PUSH	EBX
	PUSH	DWORD [24+EBX]
	PUSH	DWORD [20+EBX]
	PUSH	DWORD [24+ESI]
	CALL	_make_Console8
	PUSH	EBX
	PUSH	ESI
	CALL	_strcpy
	MOV	EAX,DWORD [EDI]
	MOV	EDX,DWORD [20+ESI]
	MOV	DWORD [28+EBX],EDX
	MOV	DWORD [4+EDX],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	GLOBAL	_Make_Win1
_Make_Win1:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,32
	MOV	EDI,DWORD [8+EBP]
	MOV	ESI,DWORD [16+EBP]
	MOV	EAX,DWORD [3588+EDI]
	INC	EAX
	MOV	DWORD [3588+EDI],EAX
	IMUL	EAX,EAX,28
	LEA	EBX,DWORD [4+EAX+EDI*1]
	MOV	EAX,DWORD [20+ESI]
	IMUL	EAX,DWORD [24+ESI]
	PUSH	EAX
	PUSH	DWORD [12+EBP]
	CALL	_memman_alloc_4K
	MOV	DWORD [24+EBX],EAX
	PUSH	DWORD [EDI]
	CALL	_sheet_alloc
	MOV	DWORD [20+EBX],EAX
	PUSH	15
	PUSH	DWORD [24+ESI]
	PUSH	DWORD [20+ESI]
	PUSH	DWORD [24+EBX]
	PUSH	EAX
	CALL	_sheet_setbuf
	ADD	ESP,32
	PUSH	ESI
	PUSH	DWORD [24+ESI]
	PUSH	DWORD [20+ESI]
	PUSH	DWORD [24+EBX]
	CALL	_make_window8
	PUSH	20
	PUSH	100
	PUSH	28
	PUSH	8
	PUSH	DWORD [20+EBX]
	CALL	_make_textbox8
	ADD	ESP,36
	PUSH	DWORD [24+EBP]
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [20+EBX]
	PUSH	DWORD [EDI]
	CALL	_sheet_slide
	MOV	EAX,DWORD [3588+EDI]
	DEC	EAX
	PUSH	EAX
	PUSH	DWORD [20+EBX]
	PUSH	DWORD [EDI]
	CALL	_sheet_updown
	PUSH	ESI
	PUSH	EBX
	CALL	_strcpy
	MOV	EAX,DWORD [EDI]
	MOV	EDX,DWORD [20+EBX]
	MOV	DWORD [28+ESI],EDX
	MOV	DWORD [4+EDX],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	GLOBAL	_Make_Console
_Make_Console:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	EAX
	MOV	ESI,DWORD [16+EBP]
	MOV	EAX,DWORD [20+EBP]
	MOV	EBX,DWORD [8+EBP]
	MOV	DWORD [-16+EBP],EAX
	MOV	EDI,DWORD [24+EBP]
	PUSH	ESI
	PUSH	DWORD [12+EBP]
	PUSH	EBX
	CALL	_Make_Console_Base
	PUSH	EDI
	PUSH	DWORD [-16+EBP]
	PUSH	DWORD [28+ESI]
	PUSH	DWORD [EBX]
	CALL	_sheet_slide
	MOV	EAX,DWORD [3588+EBX]
	DEC	EAX
	ADD	ESP,28
	MOV	DWORD [16+EBP],EAX
	MOV	EAX,DWORD [28+ESI]
	MOV	DWORD [12+EBP],EAX
	MOV	EAX,DWORD [EBX]
	MOV	DWORD [8+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_sheet_updown
	GLOBAL	_shtctl_init
_shtctl_init:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	MOV	ESI,DWORD [8+EBP]
	PUSH	10260
	MOV	EDI,DWORD [16+EBP]
	PUSH	ESI
	CALL	_memman_alloc_4K
	MOV	EBX,EAX
	POP	EAX
	POP	EDX
	XOR	EAX,EAX
	TEST	EBX,EBX
	JE	L8
	MOV	EAX,DWORD [20+EBP]
	IMUL	EAX,EDI
	PUSH	EAX
	PUSH	ESI
	CALL	_memman_alloc_4K
	TEST	EAX,EAX
	MOV	DWORD [4+EBX],EAX
	POP	EDX
	POP	ECX
	JE	L19
	MOV	EAX,DWORD [12+EBP]
	MOV	DWORD [8+EBX],EDI
	MOV	DWORD [EBX],EAX
	MOV	EDX,255
	MOV	EAX,DWORD [20+EBP]
	MOV	DWORD [12+EBX],EAX
	LEA	EAX,DWORD [1076+EBX]
	MOV	DWORD [16+EBX],-1
L15:
	MOV	DWORD [EAX],0
	ADD	EAX,36
	DEC	EDX
	JNS	L15
L18:
	MOV	EAX,EBX
L8:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L19:
	PUSH	10260
	PUSH	EBX
	PUSH	ESI
	CALL	_memman_free_4K
	JMP	L18
	GLOBAL	_sheet_alloc
_sheet_alloc:
	PUSH	EBP
	XOR	EDX,EDX
	MOV	EBP,ESP
	MOV	ECX,DWORD [8+EBP]
	LEA	EAX,DWORD [1044+ECX]
L26:
	CMP	DWORD [32+EAX],0
	JE	L29
	INC	EDX
	ADD	EAX,36
	CMP	EDX,255
	JLE	L26
	XOR	EAX,EAX
L20:
	POP	EBP
	RET
L29:
	MOV	DWORD [32+EAX],1
	MOV	DWORD [28+EAX],-1
	MOV	DWORD [4+EAX],ECX
	JMP	L20
	GLOBAL	_sheet_setbuf
_sheet_setbuf:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EDX,DWORD [8+EBP]
	MOV	EAX,DWORD [12+EBP]
	MOV	DWORD [EDX],EAX
	MOV	EAX,DWORD [16+EBP]
	MOV	DWORD [8+EDX],EAX
	MOV	EAX,DWORD [20+EBP]
	MOV	DWORD [12+EDX],EAX
	MOV	EAX,DWORD [24+EBP]
	MOV	DWORD [24+EDX],EAX
	POP	EBP
	RET
	GLOBAL	_sheet_updown
_sheet_updown:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	MOV	EDX,DWORD [8+EBP]
	PUSH	EBX
	MOV	ESI,DWORD [12+EBP]
	MOV	EBX,DWORD [16+EBP]
	MOV	EAX,DWORD [16+EDX]
	INC	EAX
	MOV	EDI,DWORD [28+ESI]
	CMP	EBX,EAX
	JLE	L32
	MOV	EBX,EAX
L32:
	CMP	EBX,-1
	JGE	L33
	OR	EBX,-1
L33:
	MOV	DWORD [28+ESI],EBX
	CMP	EDI,EBX
	JLE	L34
	TEST	EBX,EBX
	JS	L35
	MOV	ECX,EDI
L40:
	MOV	EDX,DWORD [8+EBP]
	MOV	EAX,DWORD [16+EDX+ECX*4]
	MOV	DWORD [20+EDX+ECX*4],EAX
	MOV	DWORD [28+EAX],ECX
	DEC	ECX
	CMP	ECX,EBX
	JG	L40
	MOV	DWORD [20+EDX+EBX*4],ESI
	INC	EBX
	PUSH	EBX
	MOV	ECX,DWORD [20+ESI]
	MOV	EAX,ECX
	ADD	EAX,DWORD [12+ESI]
	PUSH	EAX
	MOV	EDX,DWORD [16+ESI]
	MOV	EAX,EDX
	ADD	EAX,DWORD [8+ESI]
	PUSH	EAX
	PUSH	ECX
	PUSH	EDX
	PUSH	DWORD [8+EBP]
	CALL	_sheet_refreshmap
	PUSH	EDI
L70:
	PUSH	EBX
L69:
	MOV	ECX,DWORD [20+ESI]
	MOV	EAX,ECX
	ADD	EAX,DWORD [12+ESI]
	PUSH	EAX
	MOV	EDX,DWORD [16+ESI]
	MOV	EAX,EDX
	ADD	EAX,DWORD [8+ESI]
	PUSH	EAX
	PUSH	ECX
	PUSH	EDX
	PUSH	DWORD [8+EBP]
	CALL	_sheet_refreshsub
	ADD	ESP,52
L31:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L35:
	MOV	EDX,DWORD [8+EBP]
	MOV	EAX,DWORD [16+EDX]
	CMP	EAX,EDI
	JLE	L42
	MOV	ECX,EDI
	CMP	EDI,EAX
	JGE	L42
L47:
	MOV	EDX,DWORD [8+EBP]
	MOV	EAX,DWORD [24+EDX+ECX*4]
	MOV	DWORD [20+EDX+ECX*4],EAX
	MOV	DWORD [28+EAX],ECX
	INC	ECX
	CMP	ECX,DWORD [16+EDX]
	JL	L47
L42:
	MOV	EAX,DWORD [8+EBP]
	DEC	DWORD [16+EAX]
	PUSH	0
	MOV	ECX,DWORD [20+ESI]
	MOV	EAX,ECX
	ADD	EAX,DWORD [12+ESI]
	PUSH	EAX
	MOV	EDX,DWORD [16+ESI]
	MOV	EAX,EDX
	ADD	EAX,DWORD [8+ESI]
	PUSH	EAX
	PUSH	ECX
	PUSH	EDX
	PUSH	DWORD [8+EBP]
	CALL	_sheet_refreshmap
	LEA	EAX,DWORD [-1+EDI]
	PUSH	EAX
	PUSH	0
	JMP	L69
L34:
	CMP	EDI,EBX
	JGE	L31
	TEST	EDI,EDI
	JS	L50
	MOV	ECX,EDI
	CMP	EDI,EBX
	JGE	L66
L55:
	MOV	EDX,DWORD [8+EBP]
	MOV	EAX,DWORD [24+EDX+ECX*4]
	MOV	DWORD [20+EDX+ECX*4],EAX
	MOV	DWORD [28+EAX],ECX
	INC	ECX
	CMP	ECX,EBX
	JL	L55
L66:
	MOV	EAX,DWORD [8+EBP]
	MOV	DWORD [20+EAX+EBX*4],ESI
L56:
	PUSH	EBX
	MOV	ECX,DWORD [20+ESI]
	MOV	EAX,ECX
	ADD	EAX,DWORD [12+ESI]
	PUSH	EAX
	MOV	EDX,DWORD [16+ESI]
	MOV	EAX,EDX
	ADD	EAX,DWORD [8+ESI]
	PUSH	EAX
	PUSH	ECX
	PUSH	EDX
	PUSH	DWORD [8+EBP]
	CALL	_sheet_refreshmap
	PUSH	EBX
	JMP	L70
L50:
	MOV	EDX,DWORD [8+EBP]
	MOV	ECX,DWORD [16+EDX]
	CMP	ECX,EBX
	JL	L68
L61:
	MOV	EAX,DWORD [8+EBP]
	MOV	EDX,DWORD [20+EAX+ECX*4]
	MOV	DWORD [24+EAX+ECX*4],EDX
	LEA	EAX,DWORD [1+ECX]
	DEC	ECX
	MOV	DWORD [28+EDX],EAX
	CMP	ECX,EBX
	JGE	L61
L68:
	MOV	EDX,DWORD [8+EBP]
	MOV	DWORD [20+EDX+EBX*4],ESI
	INC	DWORD [16+EDX]
	JMP	L56
	GLOBAL	_sheet_refreshsub
_sheet_refreshsub:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,44
	MOV	EAX,DWORD [8+EBP]
	MOV	EDX,DWORD [8+EBP]
	CMP	DWORD [12+EBP],0
	MOV	EAX,DWORD [EAX]
	MOV	EDX,DWORD [4+EDX]
	MOV	DWORD [-36+EBP],EAX
	MOV	DWORD [-40+EBP],EDX
	JS	L102
L72:
	CMP	DWORD [16+EBP],0
	JS	L103
L73:
	MOV	ESI,DWORD [8+EBP]
	MOV	EAX,DWORD [8+ESI]
	CMP	DWORD [20+EBP],EAX
	JLE	L74
	MOV	DWORD [20+EBP],EAX
L74:
	MOV	EDI,DWORD [8+EBP]
	MOV	EAX,DWORD [12+EDI]
	CMP	DWORD [24+EBP],EAX
	JLE	L75
	MOV	DWORD [24+EBP],EAX
L75:
	MOV	EAX,DWORD [28+EBP]
	MOV	EDX,DWORD [32+EBP]
	MOV	DWORD [-16+EBP],EAX
	CMP	EAX,EDX
	JG	L97
L95:
	MOV	EDI,DWORD [8+EBP]
	MOV	ESI,DWORD [-16+EBP]
	MOV	ECX,DWORD [16+EBP]
	MOV	EBX,DWORD [20+EDI+ESI*4]
	MOV	ESI,DWORD [20+EBP]
	MOV	EAX,DWORD [EBX]
	MOV	EDX,DWORD [20+EBX]
	MOV	DWORD [-32+EBP],EAX
	SUB	ECX,EDX
	MOV	EAX,EBX
	SUB	EAX,EDI
	MOV	EDI,DWORD [24+EBP]
	SUB	EAX,1044
	SUB	EDI,EDX
	SAR	EAX,2
	MOV	EDX,DWORD [12+EBP]
	IMUL	EAX,EAX,954437177
	MOV	BYTE [-41+EBP],AL
	MOV	DWORD [-56+EBP],EDI
	MOV	EAX,DWORD [16+EBX]
	SUB	ESI,EAX
	SUB	EDX,EAX
	MOV	DWORD [-28+EBP],ESI
	MOV	DWORD [-24+EBP],EDX
	JS	L104
L80:
	TEST	ECX,ECX
	JS	L105
L81:
	MOV	EAX,DWORD [8+EBX]
	CMP	DWORD [-28+EBP],EAX
	JLE	L82
	MOV	DWORD [-28+EBP],EAX
L82:
	MOV	EAX,DWORD [12+EBX]
	CMP	DWORD [-56+EBP],EAX
	JLE	L83
	MOV	DWORD [-56+EBP],EAX
L83:
	MOV	ESI,ECX
	CMP	ECX,DWORD [-56+EBP]
	JGE	L99
L94:
	MOV	EDI,DWORD [20+EBX]
	MOV	ECX,DWORD [-24+EBP]
	ADD	EDI,ESI
	CMP	ECX,DWORD [-28+EBP]
	MOV	DWORD [-20+EBP],EDI
	JGE	L101
L93:
	MOV	EDX,DWORD [8+EBP]
	MOV	EDI,DWORD [-20+EBP]
	MOV	EAX,DWORD [16+EBX]
	IMUL	EDI,DWORD [8+EDX]
	ADD	EAX,ECX
	MOV	DL,BYTE [-41+EBP]
	ADD	EAX,EDI
	MOV	EDI,DWORD [-40+EBP]
	MOV	DWORD [-52+EBP],EAX
	CMP	BYTE [EAX+EDI*1],DL
	JE	L106
L90:
	INC	ECX
	CMP	ECX,DWORD [-28+EBP]
	JL	L93
L101:
	INC	ESI
	CMP	ESI,DWORD [-56+EBP]
	JL	L94
L99:
	MOV	ESI,DWORD [32+EBP]
	INC	DWORD [-16+EBP]
	CMP	DWORD [-16+EBP],ESI
	JLE	L95
L97:
	ADD	ESP,44
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L106:
	MOV	EAX,ESI
	MOV	EDX,DWORD [-32+EBP]
	IMUL	EAX,DWORD [8+EBX]
	ADD	EAX,ECX
	MOV	EDI,DWORD [-36+EBP]
	MOV	AL,BYTE [EAX+EDX*1]
	MOV	EDX,DWORD [-52+EBP]
	MOV	BYTE [EDX+EDI*1],AL
	JMP	L90
L105:
	XOR	ECX,ECX
	JMP	L81
L104:
	MOV	DWORD [-24+EBP],0
	JMP	L80
L103:
	MOV	DWORD [16+EBP],0
	JMP	L73
L102:
	MOV	DWORD [12+EBP],0
	JMP	L72
	GLOBAL	_sheet_refreshmap
_sheet_refreshmap:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,40
	MOV	EAX,DWORD [8+EBP]
	CMP	DWORD [12+EBP],0
	MOV	EAX,DWORD [4+EAX]
	MOV	DWORD [-40+EBP],EAX
	JS	L138
L108:
	CMP	DWORD [16+EBP],0
	JS	L139
L109:
	MOV	EDX,DWORD [8+EBP]
	MOV	EAX,DWORD [8+EDX]
	CMP	DWORD [20+EBP],EAX
	JLE	L110
	MOV	DWORD [20+EBP],EAX
L110:
	MOV	ESI,DWORD [8+EBP]
	MOV	EAX,DWORD [12+ESI]
	CMP	DWORD [24+EBP],EAX
	JLE	L111
	MOV	DWORD [24+EBP],EAX
L111:
	MOV	EAX,DWORD [8+EBP]
	MOV	EDI,DWORD [28+EBP]
	MOV	DWORD [-16+EBP],EDI
	CMP	EDI,DWORD [16+EAX]
	JG	L133
L131:
	MOV	ESI,DWORD [8+EBP]
	MOV	EDX,DWORD [-16+EBP]
	MOV	EBX,DWORD [16+EBP]
	MOV	ECX,DWORD [20+ESI+EDX*4]
	MOV	EAX,ECX
	SUB	EAX,ESI
	MOV	EDI,DWORD [ECX]
	SUB	EAX,1044
	MOV	EDX,DWORD [20+ECX]
	SAR	EAX,2
	MOV	DWORD [-32+EBP],EDI
	IMUL	EAX,EAX,954437177
	MOV	EDI,DWORD [24+EBP]
	SUB	EBX,EDX
	SUB	EDI,EDX
	MOV	BYTE [-33+EBP],AL
	MOV	ESI,DWORD [20+EBP]
	MOV	EDX,DWORD [12+EBP]
	MOV	EAX,DWORD [16+ECX]
	MOV	DWORD [-44+EBP],EDI
	SUB	ESI,EAX
	SUB	EDX,EAX
	MOV	DWORD [-52+EBP],ESI
	MOV	DWORD [-28+EBP],EDX
	JS	L140
L116:
	TEST	EBX,EBX
	JS	L141
L117:
	MOV	EAX,DWORD [8+ECX]
	CMP	DWORD [-52+EBP],EAX
	JLE	L118
	MOV	DWORD [-52+EBP],EAX
L118:
	MOV	EAX,DWORD [12+ECX]
	CMP	DWORD [-44+EBP],EAX
	JLE	L119
	MOV	DWORD [-44+EBP],EAX
L119:
	CMP	EBX,DWORD [-44+EBP]
	JGE	L135
L130:
	MOV	ESI,DWORD [20+ECX]
	MOV	EDX,DWORD [-28+EBP]
	ADD	ESI,EBX
	CMP	EDX,DWORD [-52+EBP]
	MOV	DWORD [-24+EBP],ESI
	JGE	L137
L129:
	MOV	EAX,EBX
	MOV	EDI,DWORD [16+ECX]
	IMUL	EAX,DWORD [8+ECX]
	ADD	EDI,EDX
	MOV	ESI,DWORD [-32+EBP]
	ADD	EAX,EDX
	MOV	DWORD [-20+EBP],EDI
	MOVZX	ESI,BYTE [EAX+ESI*1]
	CMP	ESI,DWORD [24+ECX]
	JE	L126
	MOV	EDI,DWORD [8+EBP]
	MOV	EAX,DWORD [-24+EBP]
	MOV	ESI,DWORD [-40+EBP]
	IMUL	EAX,DWORD [8+EDI]
	ADD	EAX,DWORD [-20+EBP]
	MOV	DWORD [-48+EBP],EAX
	MOV	AL,BYTE [-33+EBP]
	MOV	EDI,DWORD [-48+EBP]
	MOV	BYTE [EDI+ESI*1],AL
L126:
	INC	EDX
	CMP	EDX,DWORD [-52+EBP]
	JL	L129
L137:
	INC	EBX
	CMP	EBX,DWORD [-44+EBP]
	JL	L130
L135:
	MOV	EDX,DWORD [8+EBP]
	INC	DWORD [-16+EBP]
	MOV	EAX,DWORD [-16+EBP]
	CMP	EAX,DWORD [16+EDX]
	JLE	L131
L133:
	ADD	ESP,40
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L141:
	XOR	EBX,EBX
	JMP	L117
L140:
	MOV	DWORD [-28+EBP],0
	JMP	L116
L139:
	MOV	DWORD [16+EBP],0
	JMP	L109
L138:
	MOV	DWORD [12+EBP],0
	JMP	L108
	GLOBAL	_sheet_refresh
_sheet_refresh:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EDX,DWORD [12+EBP]
	MOV	EAX,DWORD [28+EDX]
	TEST	EAX,EAX
	JS	L142
	PUSH	EAX
	PUSH	EAX
	MOV	ECX,DWORD [20+EDX]
	MOV	EAX,ECX
	ADD	ECX,DWORD [20+EBP]
	ADD	EAX,DWORD [28+EBP]
	PUSH	EAX
	MOV	EDX,DWORD [16+EDX]
	MOV	EAX,EDX
	ADD	EDX,DWORD [16+EBP]
	ADD	EAX,DWORD [24+EBP]
	PUSH	EAX
	PUSH	ECX
	PUSH	EDX
	PUSH	DWORD [8+EBP]
	CALL	_sheet_refreshsub
	ADD	ESP,28
L142:
	LEAVE
	RET
	GLOBAL	_sheet_slide
_sheet_slide:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	MOV	EAX,DWORD [16+EBP]
	MOV	EBX,DWORD [12+EBP]
	MOV	EDI,DWORD [16+EBX]
	MOV	ESI,DWORD [20+EBX]
	MOV	DWORD [16+EBX],EAX
	MOV	EAX,DWORD [20+EBP]
	MOV	DWORD [20+EBX],EAX
	CMP	DWORD [28+EBX],0
	JS	L144
	PUSH	0
	MOV	EAX,ESI
	ADD	EAX,DWORD [12+EBX]
	PUSH	EAX
	MOV	EAX,EDI
	ADD	EAX,DWORD [8+EBX]
	PUSH	EAX
	PUSH	ESI
	PUSH	EDI
	PUSH	DWORD [8+EBP]
	CALL	_sheet_refreshmap
	MOV	EAX,DWORD [20+EBP]
	PUSH	DWORD [28+EBX]
	ADD	EAX,DWORD [12+EBX]
	PUSH	EAX
	MOV	EAX,DWORD [16+EBP]
	ADD	EAX,DWORD [8+EBX]
	PUSH	EAX
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_sheet_refreshmap
	MOV	EAX,DWORD [28+EBX]
	ADD	ESP,48
	DEC	EAX
	PUSH	EAX
	MOV	EAX,ESI
	PUSH	0
	ADD	EAX,DWORD [12+EBX]
	PUSH	EAX
	MOV	EAX,EDI
	ADD	EAX,DWORD [8+EBX]
	PUSH	EAX
	PUSH	ESI
	PUSH	EDI
	PUSH	DWORD [8+EBP]
	CALL	_sheet_refreshsub
	MOV	EAX,DWORD [20+EBP]
	PUSH	DWORD [28+EBX]
	PUSH	DWORD [28+EBX]
	ADD	EAX,DWORD [12+EBX]
	PUSH	EAX
	MOV	EAX,DWORD [16+EBP]
	ADD	EAX,DWORD [8+EBX]
	PUSH	EAX
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_sheet_refreshsub
	ADD	ESP,56
L144:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	GLOBAL	_sheet_free
_sheet_free:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EBX
	MOV	EBX,DWORD [12+EBP]
	CMP	DWORD [28+EBX],0
	JS	L147
	PUSH	-1
	PUSH	EBX
	PUSH	DWORD [8+EBP]
	CALL	_sheet_updown
	ADD	ESP,12
L147:
	MOV	DWORD [32+EBX],0
	MOV	EBX,DWORD [-4+EBP]
	LEAVE
	RET
