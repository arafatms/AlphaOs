	.file	"int.c"
	.text
	.balign 2
.globl _init_pic
	.def	_init_pic;	.scl	2;	.type	32;	.endef
_init_pic:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	$255
	pushl	$33
	call	_io_out8
	pushl	$255
	pushl	$161
	call	_io_out8
	pushl	$17
	pushl	$32
	call	_io_out8
	pushl	$32
	pushl	$33
	call	_io_out8
	addl	$32, %esp
	pushl	$4
	pushl	$33
	call	_io_out8
	pushl	$1
	pushl	$33
	call	_io_out8
	pushl	$17
	pushl	$160
	call	_io_out8
	pushl	$40
	pushl	$161
	call	_io_out8
	addl	$32, %esp
	pushl	$2
	pushl	$161
	call	_io_out8
	pushl	$1
	pushl	$161
	call	_io_out8
	pushl	$251
	pushl	$33
	call	_io_out8
	pushl	$255
	pushl	$161
	call	_io_out8
	leave
	ret
	.balign 2
.globl _inthandler21
	.def	_inthandler21;	.scl	2;	.type	32;	.endef
_inthandler21:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	$97
	pushl	$32
	call	_io_out8
	pushl	$96
	call	_io_in8
	addl	_keydata0, %eax
	pushl	%eax
	pushl	_keyfifo
	call	_fifo32_put
	leave
	ret
	.balign 2
.globl _inthandler2c
	.def	_inthandler2c;	.scl	2;	.type	32;	.endef
_inthandler2c:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	$100
	pushl	$160
	call	_io_out8
	pushl	$98
	pushl	$32
	call	_io_out8
	pushl	$96
	call	_io_in8
	addl	_mousedata0, %eax
	pushl	%eax
	pushl	_mousefifo
	call	_fifo32_put
	leave
	ret
	.balign 2
.globl _inthandler27
	.def	_inthandler27;	.scl	2;	.type	32;	.endef
_inthandler27:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	$103
	pushl	$32
	call	_io_out8
	leave
	ret
	.data
LC0:
	.ascii "\12INT 0C :\12 Stack Exception.\12\0"
LC1:
	.ascii "EIP = %08X\12\0"
	.text
	.balign 2
.globl _inthandler0c
	.def	_inthandler0c;	.scl	2;	.type	32;	.endef
_inthandler0c:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	leal	-44(%ebp), %ebx
	subl	$32, %esp
	movl	4076, %edi
	call	_task_now
	pushl	$LC0
	movl	%eax, %esi
	pushl	%edi
	addl	$20, %esi
	call	_cons_putstr
	movl	8(%ebp), %eax
	pushl	44(%eax)
	pushl	$LC1
	pushl	%ebx
	call	_sprintf
	pushl	%ebx
	pushl	%edi
	call	_cons_putstr
	leal	-12(%ebp), %esp
	popl	%ebx
	movl	%esi, %eax
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.data
LC2:
	.ascii "\12INT 0D :\12 General Protected Exception.\12\0"
	.text
	.balign 2
.globl _inthandler0d
	.def	_inthandler0d;	.scl	2;	.type	32;	.endef
_inthandler0d:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	leal	-44(%ebp), %ebx
	subl	$32, %esp
	movl	4076, %edi
	call	_task_now
	pushl	$LC2
	movl	%eax, %esi
	pushl	%edi
	addl	$20, %esi
	call	_cons_putstr
	movl	8(%ebp), %eax
	pushl	44(%eax)
	pushl	$LC1
	pushl	%ebx
	call	_sprintf
	pushl	%ebx
	pushl	%edi
	call	_cons_putstr
	leal	-12(%ebp), %esp
	popl	%ebx
	movl	%esi, %eax
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _Allow_InterruptMask
	.def	_Allow_InterruptMask;	.scl	2;	.type	32;	.endef
_Allow_InterruptMask:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	$248
	pushl	$33
	call	_io_out8
	pushl	$239
	pushl	$161
	call	_io_out8
	leave
	ret
	.def	_sprintf;	.scl	2;	.type	32;	.endef
	.def	_cons_putstr;	.scl	2;	.type	32;	.endef
	.def	_task_now;	.scl	2;	.type	32;	.endef
	.def	_fifo32_put;	.scl	2;	.type	32;	.endef
	.def	_io_in8;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
